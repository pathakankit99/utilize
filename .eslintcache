[{"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\serviceWorker.js":"3","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\app\\store.js":"4","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\Dashboard.js":"5","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\OrderCard.js":"6","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\MyDetails.js":"7","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\Login.js":"8","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\Logout.js":"9","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\utils\\refreshTokenSetup.js":"10","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\features\\data\\dataSlice.js":"11"},{"size":877,"mtime":1607227400269,"results":"12","hashOfConfig":"13"},{"size":790,"mtime":1607227390656,"results":"14","hashOfConfig":"13"},{"size":5141,"mtime":1606659826844,"results":"15","hashOfConfig":"13"},{"size":191,"mtime":1607221165865,"results":"16","hashOfConfig":"13"},{"size":1178,"mtime":1607222067470,"results":"17","hashOfConfig":"13"},{"size":5889,"mtime":1607225976634,"results":"18","hashOfConfig":"13"},{"size":4850,"mtime":1607226023779,"results":"19","hashOfConfig":"13"},{"size":1575,"mtime":1607221046166,"results":"20","hashOfConfig":"13"},{"size":705,"mtime":1607221048425,"results":"21","hashOfConfig":"13"},{"size":511,"mtime":1607220513042,"results":"22","hashOfConfig":"13"},{"size":1176,"mtime":1607220947375,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rtg41n",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\index.js",[],"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\App.js",["48"],"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\serviceWorker.js",[],["49","50"],"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\app\\store.js",[],"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\Dashboard.js",[],"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\OrderCard.js",[],"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\MyDetails.js",["51"],"import React,{useState} from 'react'\r\nimport \"../styles/MyDetails.css\"\r\nimport { Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    useDisclosure,\r\n    Button,\r\n    useToast,\r\n    Select,\r\n    Input} from \"@chakra-ui/react\"\r\nimport {useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    addOrders\r\n} from '../features/data/dataSlice';\r\nimport Logout from \"./Logout\"\r\n\r\nfunction MyDetails() {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [product, setProduct] = useState(\"\")\r\n    const [quantity, setQuantity] = useState(0)\r\n    const dispatch = useDispatch()\r\n    const toast=useToast()\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        onClose()\r\n        fetch(\"https://utilize-server.herokuapp.com/add_data\", {\r\n            method: \"post\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              customer_name: name,\r\n              customer_email: email,\r\n              product: product,\r\n              quantity: quantity,\r\n            }),\r\n          })\r\n            .then((res) => {\r\n                if(res.status===422){\r\n                    toast({\r\n                        title: \"Error\",\r\n                        description: \"\",\r\n                        status: \"error\",\r\n                        duration: 5000,\r\n                        isClosable: false,\r\n                      })\r\n                }\r\n                else{\r\n                    fetch('https://utilize-server.herokuapp.com/get_data')\r\n                    .then(response => response.json())\r\n                    .then(data =>{\r\n                      dispatch(addOrders(data))\r\n                    })\r\n                    toast({\r\n                        title: \"Updated Successfully\",\r\n                        description: \"\",\r\n                        status: \"success\",\r\n                        duration: 5000,\r\n                        isClosable: false,\r\n                        })\r\n                }\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"MyDetails\">\r\n            <div className=\"Center\"><Logout/></div>\r\n            <div className=\"Center\"><Button variant=\"filled\" bgColor=\" rgb(6, 8, 22)\" onClick={onOpen}>Add Order</Button></div>\r\n            <Modal isOpen={isOpen} onClose={onClose}>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n            <ModalHeader>Add Order</ModalHeader>\r\n            <form>\r\n            <ModalBody>\r\n                    <div className=\"FormPart\">\r\n                    <div className=\"InputGroup\">\r\n                        <h3>Customer Name</h3>\r\n                        <Input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                        placeholder=\"Customer Name\"/>\r\n                    </div>\r\n                    <div className=\"InputGroup\">\r\n                        <h3>Customer Email</h3>\r\n                        <Input\r\n                        value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                        type=\"email\"\r\n                        placeholder=\"Customer Email\"/>\r\n                    </div>\r\n                    </div>\r\n                    <div>\r\n                    <div className=\"InputGroup\">\r\n                        <h3>Product</h3>\r\n                        <Select\r\n                        type=\"text\"\r\n                        onChange={(e)=>setProduct(e.target.value)}\r\n                        value={product}>\r\n                            <option selected value=\"Product 1\">Product 1</option>\r\n                            <option value=\"Product 2\">Product 2</option>\r\n                            <option value=\"Product 3\">Product 3</option>\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"InputGroup\">\r\n                        <h3>Quantity</h3>\r\n                        <Input\r\n                        value={quantity}\r\n                        onChange={(e)=>setQuantity(e.target.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Quantity\"/>\r\n                    </div>\r\n                    </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button className=\"Close\" colorScheme=\"red\" variant=\"solid\"  onClick={onClose}>\r\n                Close\r\n                </Button>\r\n                <Button onClick={submitHandler}colorScheme=\"blue\" variant=\"solid\">Add Order</Button>\r\n            </ModalFooter>\r\n            </form>\r\n            </ModalContent>\r\n            </Modal>   \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyDetails\r\n","C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\Login.js",[],"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\components\\Logout.js",[],"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\utils\\refreshTokenSetup.js",[],"C:\\Users\\ASUS\\Desktop\\clever programmer clone practice\\utilize\\src\\features\\data\\dataSlice.js",[],{"ruleId":"52","severity":1,"message":"53","line":22,"column":6,"nodeType":"54","endLine":22,"endColumn":8,"suggestions":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":14,"column":22,"nodeType":"62","messageId":"63","endLine":14,"endColumn":33},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar",{"desc":"67","fix":"68"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"69","text":"70"},[594,596],"[dispatch]"]